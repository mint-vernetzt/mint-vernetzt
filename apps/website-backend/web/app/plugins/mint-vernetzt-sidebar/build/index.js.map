{"version":3,"file":"index.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;;AAEA,SAASK,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,QAAMC,KAAK,GAAGL,0DAAS,CAAEM,MAAD,IAAY;AAClC,UAAMC,IAAI,GAAGD,MAAM,CAAC,aAAD,CAAN,CAAsBE,sBAAtB,CAA6C,MAA7C,CAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,WAAOA,IAAI,CAAC,MAAD,CAAX;AACD,GAJsB,EAIpB,EAJoB,CAAvB;AAMA,QAAM;AAAEI,IAAAA;AAAF,MAAeV,4DAAW,CAAC,aAAD,CAAhC;AAEA,SACE,kEAAC,8DAAD;AACE,SAAK,EAAC,MADR;AAEE,gBAAY,EAAEI,KAFhB;AAGE,YAAQ,EAAGO,OAAD,IAAaD,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAE;AAAEM,QAAAA,IAAI,EAAED;AAAR;AAAR,KAAD;AAHjC,IADF;AAOD;;AAEDd,kEAAc,CAAC,uBAAD,EAA0B;AACtCgB,EAAAA,MAAM,EAAGV,KAAD,IAAW;AACjB,WACE,kEAAC,+DAAD;AACE,UAAI,EAAC,uBADP;AAEE,UAAI,EAAC,YAFP;AAGE,WAAK,EAAC;AAHR,OAKE,kEAAC,SAAD,OALF,CADF;AASD;AAXqC,CAA1B,CAAd,C","sources":["webpack://mint-vernetzt-sidebar/external window [\"wp\",\"components\"]","webpack://mint-vernetzt-sidebar/external window [\"wp\",\"data\"]","webpack://mint-vernetzt-sidebar/external window [\"wp\",\"editPost\"]","webpack://mint-vernetzt-sidebar/external window [\"wp\",\"element\"]","webpack://mint-vernetzt-sidebar/external window [\"wp\",\"plugins\"]","webpack://mint-vernetzt-sidebar/webpack/bootstrap","webpack://mint-vernetzt-sidebar/webpack/runtime/compat get default export","webpack://mint-vernetzt-sidebar/webpack/runtime/define property getters","webpack://mint-vernetzt-sidebar/webpack/runtime/hasOwnProperty shorthand","webpack://mint-vernetzt-sidebar/webpack/runtime/make namespace object","webpack://mint-vernetzt-sidebar/./src/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"plugins\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerPlugin } from \"@wordpress/plugins\";\nimport { PluginSidebar } from \"@wordpress/edit-post\";\nimport { useSelect, useDispatch } from \"@wordpress/data\";\nimport { TextControl } from \"@wordpress/components\";\n\nfunction MetaField(props) {\n  const value = useSelect((select) => {\n    const meta = select(\"core/editor\").getEditedPostAttribute(\"meta\");\n    console.log(meta);\n    return meta[\"test\"];\n  }, []);\n\n  const { editPost } = useDispatch(\"core/editor\");\n\n  return (\n    <TextControl\n      label=\"test\"\n      defaultValue={value}\n      onChange={(content) => editPost({ meta: { test: content } })}\n    />\n  );\n}\n\nregisterPlugin(\"mint-vernetzt-sidebar\", {\n  render: (props) => {\n    return (\n      <PluginSidebar\n        name=\"mint-vernetzt-sidebar\"\n        icon=\"admin-post\"\n        title=\"MINTvernetzt sidebar\"\n      >\n        <MetaField />\n      </PluginSidebar>\n    );\n  },\n});\n"],"names":["registerPlugin","PluginSidebar","useSelect","useDispatch","TextControl","MetaField","props","value","select","meta","getEditedPostAttribute","console","log","editPost","content","test","render"],"sourceRoot":""}